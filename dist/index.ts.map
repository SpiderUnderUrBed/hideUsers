{
  "version": 3,
  "sources": ["../src/index.ts", "../../Vencord/src/utils/types.ts", "../../Vencord/src/utils/Logger.ts", "../../Vencord/src/utils/lazy.ts", "../../Vencord/src/utils/lazyReact.tsx", "../../Vencord/src/utils/patches.ts", "../../Vencord/src/debug/Tracer.ts", "../../Vencord/src/webpack/webpack.ts", "../../Vencord/src/webpack/common/classes.ts", "../../Vencord/src/utils/misc.ts", "../../Vencord/src/webpack/common/internal.tsx", "../../Vencord/src/webpack/common/components.ts", "../../Vencord/src/webpack/common/menu.ts", "../../Vencord/src/webpack/common/react.ts", "../../Vencord/src/webpack/common/stores.ts", "../../Vencord/src/webpack/common/userSettings.ts", "../../Vencord/src/webpack/common/utils.ts", "../../Vencord/src/api/ContextMenu.ts"],
  "sourcesContent": ["// import definePlugin from \"@utils/types\";\r\n//import { definePluginSettings } from \"@vencord/types/api/settings\";\r\nimport definePlugin, { OptionType } from \"@utils/types\";\r\n//import { addGlobalContextMenuPatch, GlobalContextMenuPatchCallback, removeContextMenuPatch } from \"@utils/api/ContextMenu/removeContextMenuPatch\";\r\nimport  { addGlobalContextMenuPatch, GlobalContextMenuPatchCallback, removeContextMenuPatch } from \"@utils/api/ContextMenu\";\r\n// const myGlobalContextMenuPatch: removeContextMenuPatch = (navId, children, ...args) => {\r\n//     // You can log navId, args, or manipulate children here\r\n//     console.log('Nav ID:', navId);\r\n//     console.log('Arguments:', args);\r\n\r\n//     // Modify or enhance the context menu items\r\n//     const modifiedChildren = [...children];\r\n// }\r\nconst patchContextMenu: GlobalContextMenuPatchCallback = (navId, children) => () => {\r\n    console.log(navId)\r\n};\r\nexport default definePlugin({\r\n    name: \"hideUser\",   \r\n    description: \"This hides a user like friend from DM's and friends page\",\r\n    authors: [{\r\n        name: \"SpiderUnderUrBed\",\r\n        id: 0n\r\n    }],\r\n\r\n    patches: [],\r\n    start() {\r\n        console.log(this.name, \"just started\");\r\n        addGlobalContextMenuPatch(patchContextMenu);\r\n\r\n    },\r\n    stop() {\r\n\r\n    },\r\n});", "/*\n * Vencord, a modification for Discord's desktop app\n * Copyright (c) 2022 Vendicated and contributors\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Command } from \"@api/Commands\";\nimport { NavContextMenuPatchCallback } from \"@api/ContextMenu\";\nimport { FluxEvents } from \"@webpack/types\";\nimport { Promisable } from \"type-fest\";\n\n// exists to export default definePlugin({...})\nexport default function definePlugin<P extends PluginDef>(p: P & Record<string, any>) {\n    return p;\n}\n\nexport type ReplaceFn = (match: string, ...groups: string[]) => string;\n\nexport interface PatchReplacement {\n    /** The match for the patch replacement. If you use a string it will be implicitly converted to a RegExp */\n    match: string | RegExp;\n    /** The replacement string or function which returns the string for the patch replacement */\n    replace: string | ReplaceFn;\n    /** A function which returns whether this patch replacement should be applied */\n    predicate?(): boolean;\n}\n\nexport interface Patch {\n    plugin: string;\n    /** A string or RegExp which is only include/matched in the module code you wish to patch. Prefer only using a RegExp if a simple string test is not enough */\n    find: string | RegExp;\n    /** The replacement(s) for the module being patched */\n    replacement: PatchReplacement | PatchReplacement[];\n    /** Whether this patch should apply to multiple modules */\n    all?: boolean;\n    /** Do not warn if this patch did no changes */\n    noWarn?: boolean;\n    /** Only apply this set of replacements if all of them succeed. Use this if your replacements depend on each other */\n    group?: boolean;\n    /** A function which returns whether this patch should be applied */\n    predicate?(): boolean;\n}\n\nexport interface PluginAuthor {\n    name: string;\n    id: BigInt;\n}\n\nexport interface Plugin extends PluginDef {\n    patches?: Patch[];\n    started: boolean;\n    isDependency?: boolean;\n}\n\nexport interface PluginDef {\n    name: string;\n    description: string;\n    authors: PluginAuthor[];\n    start?(): void;\n    stop?(): void;\n    patches?: Omit<Patch, \"plugin\">[];\n    /**\n     * List of commands that your plugin wants to register\n     */\n    commands?: Command[];\n    /**\n     * A list of other plugins that your plugin depends on.\n     * These will automatically be enabled and loaded before your plugin\n     * Generally these will be API plugins\n     */\n    dependencies?: string[],\n    /**\n     * Whether this plugin is required and forcefully enabled\n     */\n    required?: boolean;\n    /**\n     * Whether this plugin should be hidden from the user\n     */\n    hidden?: boolean;\n    /**\n     * Whether this plugin should be enabled by default, but can be disabled\n     */\n    enabledByDefault?: boolean;\n    /**\n     * When to call the start() method\n     * @default StartAt.WebpackReady\n     */\n    startAt?: StartAt,\n    /**\n     * Which parts of the plugin can be tested by the reporter. Defaults to all parts\n     */\n    reporterTestable?: number;\n    /**\n     * Optionally provide settings that the user can configure in the Plugins tab of settings.\n     * @deprecated Use `settings` instead\n     */\n    // TODO: Remove when everything is migrated to `settings`\n    options?: Record<string, PluginOptionsItem>;\n    /**\n     * Optionally provide settings that the user can configure in the Plugins tab of settings.\n     */\n    settings?: DefinedSettings;\n    /**\n     * Check that this returns true before allowing a save to complete.\n     * If a string is returned, show the error to the user.\n     */\n    beforeSave?(options: Record<string, any>): Promisable<true | string>;\n    /**\n     * Allows you to specify a custom Component that will be rendered in your\n     * plugin's settings page\n     */\n    settingsAboutComponent?: React.ComponentType<{\n        tempSettings?: Record<string, any>;\n    }>;\n    /**\n     * Allows you to subscribe to Flux events\n     */\n    flux?: {\n        [E in FluxEvents]?: (event: any) => void | Promise<void>;\n    };\n    /**\n     * Allows you to manipulate context menus\n     */\n    contextMenus?: Record<string, NavContextMenuPatchCallback>;\n    /**\n     * Allows you to add custom actions to the Vencord Toolbox.\n     * The key will be used as text for the button\n     */\n    toolboxActions?: Record<string, () => void>;\n\n    tags?: string[];\n}\n\nexport const enum StartAt {\n    /** Right away, as soon as Vencord initialised */\n    Init = \"Init\",\n    /** On the DOMContentLoaded event, so once the document is ready */\n    DOMContentLoaded = \"DOMContentLoaded\",\n    /** Once Discord's core webpack modules have finished loading, so as soon as things like react and flux are available */\n    WebpackReady = \"WebpackReady\"\n}\n\nexport const enum ReporterTestable {\n    None = 1 << 1,\n    Start = 1 << 2,\n    Patches = 1 << 3,\n    FluxEvents = 1 << 4\n}\n\nexport const enum OptionType {\n    STRING,\n    NUMBER,\n    BIGINT,\n    BOOLEAN,\n    SELECT,\n    SLIDER,\n    COMPONENT,\n}\n\nexport type SettingsDefinition = Record<string, PluginSettingDef>;\nexport type SettingsChecks<D extends SettingsDefinition> = {\n    [K in keyof D]?: D[K] extends PluginSettingComponentDef ? IsDisabled<DefinedSettings<D>> :\n    (IsDisabled<DefinedSettings<D>> & IsValid<PluginSettingType<D[K]>, DefinedSettings<D>>);\n};\n\nexport type PluginSettingDef = (\n    | PluginSettingStringDef\n    | PluginSettingNumberDef\n    | PluginSettingBooleanDef\n    | PluginSettingSelectDef\n    | PluginSettingSliderDef\n    | PluginSettingComponentDef\n    | PluginSettingBigIntDef\n) & PluginSettingCommon;\n\nexport interface PluginSettingCommon {\n    description: string;\n    placeholder?: string;\n    onChange?(newValue: any): void;\n    /**\n     * Whether changing this setting requires a restart\n     */\n    restartNeeded?: boolean;\n    componentProps?: Record<string, any>;\n    /**\n     * Hide this setting from the settings UI\n     */\n    hidden?: boolean;\n    /**\n     * Set this if the setting only works on Browser or Desktop, not both\n     */\n    target?: \"WEB\" | \"DESKTOP\" | \"BOTH\";\n}\ninterface IsDisabled<D = unknown> {\n    /**\n     * Checks if this setting should be disabled\n     */\n    disabled?(this: D): boolean;\n}\ninterface IsValid<T, D = unknown> {\n    /**\n     * Prevents the user from saving settings if this is false or a string\n     */\n    isValid?(this: D, value: T): boolean | string;\n}\n\nexport interface PluginSettingStringDef {\n    type: OptionType.STRING;\n    default?: string;\n}\nexport interface PluginSettingNumberDef {\n    type: OptionType.NUMBER;\n    default?: number;\n}\nexport interface PluginSettingBigIntDef {\n    type: OptionType.BIGINT;\n    default?: BigInt;\n}\nexport interface PluginSettingBooleanDef {\n    type: OptionType.BOOLEAN;\n    default?: boolean;\n}\n\nexport interface PluginSettingSelectDef {\n    type: OptionType.SELECT;\n    options: readonly PluginSettingSelectOption[];\n}\nexport interface PluginSettingSelectOption {\n    label: string;\n    value: string | number | boolean;\n    default?: boolean;\n}\n\nexport interface PluginSettingSliderDef {\n    type: OptionType.SLIDER;\n    /**\n     * All the possible values in the slider. Needs at least two values.\n     */\n    markers: number[];\n    /**\n     * Default value to use\n     */\n    default: number;\n    /**\n     * If false, allow users to select values in-between your markers.\n     */\n    stickToMarkers?: boolean;\n}\n\nexport interface IPluginOptionComponentProps {\n    /**\n     * Run this when the value changes.\n     *\n     * NOTE: The user will still need to click save to apply these changes.\n     */\n    setValue(newValue: any): void;\n    /**\n     * Set to true to prevent the user from saving.\n     *\n     * NOTE: This will not show the error to the user. It will only stop them saving.\n     * Make sure to show the error in your component.\n     */\n    setError(error: boolean): void;\n    /**\n     * The options object\n     */\n    option: PluginSettingComponentDef;\n}\n\nexport interface PluginSettingComponentDef {\n    type: OptionType.COMPONENT;\n    component: (props: IPluginOptionComponentProps) => JSX.Element;\n}\n\n/** Maps a `PluginSettingDef` to its value type */\ntype PluginSettingType<O extends PluginSettingDef> = O extends PluginSettingStringDef ? string :\n    O extends PluginSettingNumberDef ? number :\n    O extends PluginSettingBigIntDef ? BigInt :\n    O extends PluginSettingBooleanDef ? boolean :\n    O extends PluginSettingSelectDef ? O[\"options\"][number][\"value\"] :\n    O extends PluginSettingSliderDef ? number :\n    O extends PluginSettingComponentDef ? any :\n    never;\ntype PluginSettingDefaultType<O extends PluginSettingDef> = O extends PluginSettingSelectDef ? (\n    O[\"options\"] extends { default?: boolean; }[] ? O[\"options\"][number][\"value\"] : undefined\n) : O extends { default: infer T; } ? T : undefined;\n\ntype SettingsStore<D extends SettingsDefinition> = {\n    [K in keyof D]: PluginSettingType<D[K]> | PluginSettingDefaultType<D[K]>;\n};\n\n/** An instance of defined plugin settings */\nexport interface DefinedSettings<\n    Def extends SettingsDefinition = SettingsDefinition,\n    Checks extends SettingsChecks<Def> = {},\n    PrivateSettings extends object = {}\n> {\n    /** Shorthand for `Vencord.Settings.plugins.PluginName`, but with typings */\n    store: SettingsStore<Def> & PrivateSettings;\n    /** Shorthand for `Vencord.PlainSettings.plugins.PluginName`, but with typings */\n    plain: SettingsStore<Def> & PrivateSettings;\n    /**\n     * React hook for getting the settings for this plugin\n     * @param filter optional filter to avoid rerenders for irrelevent settings\n     */\n    use<F extends Extract<keyof Def | keyof PrivateSettings, string>>(filter?: F[]): Pick<SettingsStore<Def> & PrivateSettings, F>;\n    /** Definitions of each setting */\n    def: Def;\n    /** Setting methods with return values that could rely on other settings */\n    checks: Checks;\n    /**\n     * Name of the plugin these settings belong to,\n     * will be an empty string until plugin is initialized\n     */\n    pluginName: string;\n\n    withPrivateSettings<T extends object>(): DefinedSettings<Def, Checks, T>;\n}\n\nexport type PartialExcept<T, R extends keyof T> = Partial<T> & Required<Pick<T, R>>;\n\nexport type IpcRes<V = any> = { ok: true; value: V; } | { ok: false, error: any; };\n\n/* -------------------------------------------- */\n/*             Legacy Options Types             */\n/* -------------------------------------------- */\n\nexport type PluginOptionBase = PluginSettingCommon & IsDisabled;\nexport type PluginOptionsItem =\n    | PluginOptionString\n    | PluginOptionNumber\n    | PluginOptionBoolean\n    | PluginOptionSelect\n    | PluginOptionSlider\n    | PluginOptionComponent;\nexport type PluginOptionString = PluginSettingStringDef & PluginSettingCommon & IsDisabled & IsValid<string>;\nexport type PluginOptionNumber = (PluginSettingNumberDef | PluginSettingBigIntDef) & PluginSettingCommon & IsDisabled & IsValid<number | BigInt>;\nexport type PluginOptionBoolean = PluginSettingBooleanDef & PluginSettingCommon & IsDisabled & IsValid<boolean>;\nexport type PluginOptionSelect = PluginSettingSelectDef & PluginSettingCommon & IsDisabled & IsValid<PluginSettingSelectOption>;\nexport type PluginOptionSlider = PluginSettingSliderDef & PluginSettingCommon & IsDisabled & IsValid<number>;\nexport type PluginOptionComponent = PluginSettingComponentDef & PluginSettingCommon;\n\nexport type PluginNative<PluginExports extends Record<string, (event: Electron.IpcMainInvokeEvent, ...args: any[]) => any>> = {\n    [key in keyof PluginExports]:\n    PluginExports[key] extends (event: Electron.IpcMainInvokeEvent, ...args: infer Args) => infer Return\n    ? (...args: Args) => Return extends Promise<any> ? Return : Promise<Return>\n    : never;\n};\n", "/*\n * Vencord, a modification for Discord's desktop app\n * Copyright (c) 2022 Vendicated and contributors\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nexport class Logger {\n    /**\n     * Returns the console format args for a title with the specified background colour and black text\n     * @param color Background colour\n     * @param title Text\n     * @returns Array. Destructure this into {@link Logger}.errorCustomFmt or console.log\n     *\n     * @example logger.errorCustomFmt(...Logger.makeTitleElements(\"white\", \"Hello\"), \"World\");\n     */\n    static makeTitle(color: string, title: string): [string, ...string[]] {\n        return [\"%c %c %s \", \"\", `background: ${color}; color: black; font-weight: bold; border-radius: 5px;`, title];\n    }\n\n    constructor(public name: string, public color: string = \"white\") { }\n\n    private _log(level: \"log\" | \"error\" | \"warn\" | \"info\" | \"debug\", levelColor: string, args: any[], customFmt = \"\") {\n        if (IS_REPORTER && IS_WEB) {\n            console[level](\"[Vencord]\", this.name + \":\", ...args);\n            return;\n        }\n\n        console[level](\n            `%c Vencord %c %c ${this.name} ${customFmt}`,\n            `background: ${levelColor}; color: black; font-weight: bold; border-radius: 5px;`,\n            \"\",\n            `background: ${this.color}; color: black; font-weight: bold; border-radius: 5px;`\n            , ...args\n        );\n    }\n\n    public log(...args: any[]) {\n        this._log(\"log\", \"#a6d189\", args);\n    }\n\n    public info(...args: any[]) {\n        this._log(\"info\", \"#a6d189\", args);\n    }\n\n    public error(...args: any[]) {\n        this._log(\"error\", \"#e78284\", args);\n    }\n\n    public errorCustomFmt(fmt: string, ...args: any[]) {\n        this._log(\"error\", \"#e78284\", args, fmt);\n    }\n\n    public warn(...args: any[]) {\n        this._log(\"warn\", \"#e5c890\", args);\n    }\n\n    public debug(...args: any[]) {\n        this._log(\"debug\", \"#eebebe\", args);\n    }\n}\n", "/*\n * Vencord, a modification for Discord's desktop app\n * Copyright (c) 2022 Vendicated and contributors\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nexport function makeLazy<T>(factory: () => T, attempts = 5): () => T {\n    let tries = 0;\n    let cache: T;\n    return () => {\n        if (!cache && attempts > tries++) {\n            cache = factory();\n            if (!cache && attempts === tries)\n                console.error(\"Lazy factory failed:\", factory);\n        }\n        return cache;\n    };\n}\n\n// Proxies demand that these properties be unmodified, so proxyLazy\n// will always return the function default for them.\nconst unconfigurable = [\"arguments\", \"caller\", \"prototype\"];\n\nconst handler: ProxyHandler<any> = {};\n\nexport const SYM_LAZY_GET = Symbol.for(\"vencord.lazy.get\");\nexport const SYM_LAZY_CACHED = Symbol.for(\"vencord.lazy.cached\");\n\nfor (const method of [\n    \"apply\",\n    \"construct\",\n    \"defineProperty\",\n    \"deleteProperty\",\n    \"getOwnPropertyDescriptor\",\n    \"getPrototypeOf\",\n    \"has\",\n    \"isExtensible\",\n    \"ownKeys\",\n    \"preventExtensions\",\n    \"set\",\n    \"setPrototypeOf\"\n]) {\n    handler[method] =\n        (target: any, ...args: any[]) => Reflect[method](target[SYM_LAZY_GET](), ...args);\n}\n\nhandler.ownKeys = target => {\n    const v = target[SYM_LAZY_GET]();\n    const keys = Reflect.ownKeys(v);\n    for (const key of unconfigurable) {\n        if (!keys.includes(key)) keys.push(key);\n    }\n    return keys;\n};\n\nhandler.getOwnPropertyDescriptor = (target, p) => {\n    if (typeof p === \"string\" && unconfigurable.includes(p))\n        return Reflect.getOwnPropertyDescriptor(target, p);\n\n    const descriptor = Reflect.getOwnPropertyDescriptor(target[SYM_LAZY_GET](), p);\n\n    if (descriptor) Object.defineProperty(target, p, descriptor);\n    return descriptor;\n};\n\n/**\n * Wraps the result of {@link makeLazy} in a Proxy you can consume as if it wasn't lazy.\n * On first property access, the lazy is evaluated\n * @param factory lazy factory\n * @param attempts how many times to try to evaluate the lazy before giving up\n * @returns Proxy\n *\n * Note that the example below exists already as an api, see {@link findByPropsLazy}\n * @example const mod = proxyLazy(() => findByProps(\"blah\")); console.log(mod.blah);\n */\nexport function proxyLazy<T>(factory: () => T, attempts = 5, isChild = false): T {\n    let isSameTick = true;\n    if (!isChild)\n        setTimeout(() => isSameTick = false, 0);\n\n    let tries = 0;\n    const proxyDummy = Object.assign(function () { }, {\n        [SYM_LAZY_CACHED]: void 0 as T | undefined,\n        [SYM_LAZY_GET]() {\n            if (!proxyDummy[SYM_LAZY_CACHED] && attempts > tries++) {\n                proxyDummy[SYM_LAZY_CACHED] = factory();\n                if (!proxyDummy[SYM_LAZY_CACHED] && attempts === tries)\n                    console.error(\"Lazy factory failed:\", factory);\n            }\n            return proxyDummy[SYM_LAZY_CACHED];\n        }\n    });\n\n    return new Proxy(proxyDummy, {\n        ...handler,\n        get(target, p, receiver) {\n            if (p === SYM_LAZY_CACHED || p === SYM_LAZY_GET)\n                return Reflect.get(target, p, receiver);\n\n            // if we're still in the same tick, it means the lazy was immediately used.\n            // thus, we lazy proxy the get access to make things like destructuring work as expected\n            // meow here will also be a lazy\n            // `const { meow } = findByPropsLazy(\"meow\");`\n            if (!isChild && isSameTick)\n                return proxyLazy(\n                    () => Reflect.get(target[SYM_LAZY_GET](), p, receiver),\n                    attempts,\n                    true\n                );\n            const lazyTarget = target[SYM_LAZY_GET]();\n            if (typeof lazyTarget === \"object\" || typeof lazyTarget === \"function\") {\n                return Reflect.get(lazyTarget, p, receiver);\n            }\n            throw new Error(\"proxyLazy called on a primitive value\");\n        }\n    }) as any;\n}\n", "/*\n * Vencord, a Discord client mod\n * Copyright (c) 2023 Vendicated and contributors\n * SPDX-License-Identifier: GPL-3.0-or-later\n */\n\nimport { ComponentType } from \"react\";\n\nimport { makeLazy } from \"./lazy\";\n\nconst NoopComponent = () => null;\n\n/**\n * A lazy component. The factory method is called on first render.\n * @param factory Function returning a Component\n * @param attempts How many times to try to get the component before giving up\n * @returns Result of factory function\n */\nexport function LazyComponent<T extends object = any>(factory: () => React.ComponentType<T>, attempts = 5) {\n    const get = makeLazy(factory, attempts);\n    const LazyComponent = (props: T) => {\n        const Component = get() ?? NoopComponent;\n        return <Component {...props} />;\n    };\n\n    LazyComponent.$$vencordInternal = get;\n\n    return LazyComponent as ComponentType<T>;\n}\n", "/*\n * Vencord, a modification for Discord's desktop app\n * Copyright (c) 2022 Vendicated and contributors\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Patch, PatchReplacement, ReplaceFn } from \"./types\";\n\nexport function canonicalizeMatch<T extends RegExp | string>(match: T): T {\n    if (typeof match === \"string\") return match;\n    const canonSource = match.source\n        .replaceAll(\"\\\\i\", \"[A-Za-z_$][\\\\w$]*\");\n    return new RegExp(canonSource, match.flags) as T;\n}\n\nexport function canonicalizeReplace<T extends string | ReplaceFn>(replace: T, pluginName: string): T {\n    const self = `Vencord.Plugins.plugins[${JSON.stringify(pluginName)}]`;\n\n    if (typeof replace !== \"function\")\n        return replace.replaceAll(\"$self\", self) as T;\n\n    return ((...args) => replace(...args).replaceAll(\"$self\", self)) as T;\n}\n\nexport function canonicalizeDescriptor<T>(descriptor: TypedPropertyDescriptor<T>, canonicalize: (value: T) => T) {\n    if (descriptor.get) {\n        const original = descriptor.get;\n        descriptor.get = function () {\n            return canonicalize(original.call(this));\n        };\n    } else if (descriptor.value) {\n        descriptor.value = canonicalize(descriptor.value);\n    }\n    return descriptor;\n}\n\nexport function canonicalizeReplacement(replacement: Pick<PatchReplacement, \"match\" | \"replace\">, plugin: string) {\n    const descriptors = Object.getOwnPropertyDescriptors(replacement);\n    descriptors.match = canonicalizeDescriptor(descriptors.match, canonicalizeMatch);\n    descriptors.replace = canonicalizeDescriptor(\n        descriptors.replace,\n        replace => canonicalizeReplace(replace, plugin),\n    );\n    Object.defineProperties(replacement, descriptors);\n}\n\nexport function canonicalizeFind(patch: Patch) {\n    const descriptors = Object.getOwnPropertyDescriptors(patch);\n    descriptors.find = canonicalizeDescriptor(descriptors.find, canonicalizeMatch);\n    Object.defineProperties(patch, descriptors);\n}\n", "/*\n * Vencord, a modification for Discord's desktop app\n * Copyright (c) 2022 Vendicated and contributors\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Logger } from \"@utils/Logger\";\n\nif (IS_DEV || IS_REPORTER) {\n    var traces = {} as Record<string, [number, any[]]>;\n    var logger = new Logger(\"Tracer\", \"#FFD166\");\n}\n\nconst noop = function () { };\n\nexport const beginTrace = !(IS_DEV || IS_REPORTER) ? noop :\n    function beginTrace(name: string, ...args: any[]) {\n        if (name in traces)\n            throw new Error(`Trace ${name} already exists!`);\n\n        traces[name] = [performance.now(), args];\n    };\n\nexport const finishTrace = !(IS_DEV || IS_REPORTER) ? noop : function finishTrace(name: string) {\n    const end = performance.now();\n\n    const [start, args] = traces[name];\n    delete traces[name];\n\n    logger.debug(`${name} took ${end - start}ms`, args);\n};\n\ntype Func = (...args: any[]) => any;\ntype TraceNameMapper<F extends Func> = (...args: Parameters<F>) => string;\n\nconst noopTracer =\n    <F extends Func>(name: string, f: F, mapper?: TraceNameMapper<F>) => f;\n\nexport const traceFunction = !(IS_DEV || IS_REPORTER)\n    ? noopTracer\n    : function traceFunction<F extends Func>(name: string, f: F, mapper?: TraceNameMapper<F>): F {\n        return function (this: any, ...args: Parameters<F>) {\n            const traceName = mapper?.(...args) ?? name;\n\n            beginTrace(traceName, ...arguments);\n            try {\n                return f.apply(this, args);\n            } finally {\n                finishTrace(traceName);\n            }\n        } as F;\n    };\n", "/*\n * Vencord, a modification for Discord's desktop app\n * Copyright (c) 2022 Vendicated and contributors\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { makeLazy, proxyLazy } from \"@utils/lazy\";\nimport { LazyComponent } from \"@utils/lazyReact\";\nimport { Logger } from \"@utils/Logger\";\nimport { canonicalizeMatch } from \"@utils/patches\";\nimport type { WebpackInstance } from \"discord-types/other\";\n\nimport { traceFunction } from \"../debug/Tracer\";\n\nconst logger = new Logger(\"Webpack\");\n\nexport let _resolveReady: () => void;\n/**\n * Fired once a gateway connection to Discord has been established.\n * This indicates that the core webpack modules have been initialised\n */\nexport const onceReady = new Promise<void>(r => _resolveReady = r);\n\nexport let wreq: WebpackInstance;\nexport let cache: WebpackInstance[\"c\"];\n\nexport type FilterFn = (mod: any) => boolean;\n\nexport type PropsFilter = Array<string>;\nexport type CodeFilter = Array<string | RegExp>;\nexport type StoreNameFilter = string;\n\nexport const stringMatches = (s: string, filter: CodeFilter) =>\n    filter.every(f =>\n        typeof f === \"string\"\n            ? s.includes(f)\n            : (f.global && (f.lastIndex = 0), f.test(s))\n    );\n\nexport const filters = {\n    byProps: (...props: PropsFilter): FilterFn =>\n        props.length === 1\n            ? m => m[props[0]] !== void 0\n            : m => props.every(p => m[p] !== void 0),\n\n    byCode: (...code: CodeFilter): FilterFn => {\n        code = code.map(canonicalizeMatch);\n        return m => {\n            if (typeof m !== \"function\") return false;\n            return stringMatches(Function.prototype.toString.call(m), code);\n        };\n    },\n    byStoreName: (name: StoreNameFilter): FilterFn => m =>\n        m.constructor?.displayName === name,\n\n    componentByCode: (...code: CodeFilter): FilterFn => {\n        const filter = filters.byCode(...code);\n        return m => {\n            if (filter(m)) return true;\n            if (!m.$$typeof) return false;\n            if (m.type)\n                return m.type.render\n                    ? filter(m.type.render) // memo + forwardRef\n                    : filter(m.type); // memo\n            if (m.render) return filter(m.render); // forwardRef\n            return false;\n        };\n    }\n};\n\nexport type CallbackFn = (mod: any, id: string) => void;\n\nexport const subscriptions = new Map<FilterFn, CallbackFn>();\nexport const moduleListeners = new Set<CallbackFn>();\nexport const factoryListeners = new Set<(factory: (module: any, exports: any, require: WebpackInstance) => void) => void>();\nexport const beforeInitListeners = new Set<(wreq: WebpackInstance) => void>();\n\nexport function _initWebpack(webpackRequire: WebpackInstance) {\n    wreq = webpackRequire;\n    cache = webpackRequire.c;\n}\n\nlet devToolsOpen = false;\nif (IS_DEV && IS_DISCORD_DESKTOP) {\n    // At this point in time, DiscordNative has not been exposed yet, so setImmediate is needed\n    setTimeout(() => {\n        DiscordNative/* just to make sure */?.window.setDevtoolsCallbacks(() => devToolsOpen = true, () => devToolsOpen = false);\n    }, 0);\n}\n\nexport function handleModuleNotFound(method: string, ...filter: unknown[]) {\n    const err = new Error(`webpack.${method} found no module`);\n    logger.error(err, \"Filter:\", filter);\n\n    // Strict behaviour in DevBuilds to fail early and make sure the issue is found\n    if (IS_DEV && !devToolsOpen)\n        throw err;\n}\n\n/**\n * Find the first module that matches the filter\n */\nexport const find = traceFunction(\"find\", function find(filter: FilterFn, { isIndirect = false, isWaitFor = false }: { isIndirect?: boolean; isWaitFor?: boolean; } = {}) {\n    if (typeof filter !== \"function\")\n        throw new Error(\"Invalid filter. Expected a function got \" + typeof filter);\n\n    for (const key in cache) {\n        const mod = cache[key];\n        if (!mod.loaded || !mod?.exports) continue;\n\n        if (filter(mod.exports)) {\n            return isWaitFor ? [mod.exports, key] : mod.exports;\n        }\n\n        if (typeof mod.exports !== \"object\") continue;\n\n        if (mod.exports.default && filter(mod.exports.default)) {\n            const found = mod.exports.default;\n            return isWaitFor ? [found, key] : found;\n        }\n\n        // the length check makes search about 20% faster\n        for (const nestedMod in mod.exports) if (nestedMod.length <= 3) {\n            const nested = mod.exports[nestedMod];\n            if (nested && filter(nested)) {\n                return isWaitFor ? [nested, key] : nested;\n            }\n        }\n    }\n\n    if (!isIndirect) {\n        handleModuleNotFound(\"find\", filter);\n    }\n\n    return isWaitFor ? [null, null] : null;\n});\n\nexport function findAll(filter: FilterFn) {\n    if (typeof filter !== \"function\")\n        throw new Error(\"Invalid filter. Expected a function got \" + typeof filter);\n\n    const ret = [] as any[];\n    for (const key in cache) {\n        const mod = cache[key];\n        if (!mod.loaded || !mod?.exports) continue;\n\n        if (filter(mod.exports))\n            ret.push(mod.exports);\n        else if (typeof mod.exports !== \"object\")\n            continue;\n\n        if (mod.exports.default && filter(mod.exports.default))\n            ret.push(mod.exports.default);\n        else for (const nestedMod in mod.exports) if (nestedMod.length <= 3) {\n            const nested = mod.exports[nestedMod];\n            if (nested && filter(nested)) ret.push(nested);\n        }\n    }\n\n    return ret;\n}\n\n/**\n * Same as {@link find} but in bulk\n * @param filterFns Array of filters. Please note that this array will be modified in place, so if you still\n *                need it afterwards, pass a copy.\n * @returns Array of results in the same order as the passed filters\n */\nexport const findBulk = traceFunction(\"findBulk\", function findBulk(...filterFns: FilterFn[]) {\n    if (!Array.isArray(filterFns))\n        throw new Error(\"Invalid filters. Expected function[] got \" + typeof filterFns);\n\n    const { length } = filterFns;\n\n    if (length === 0)\n        throw new Error(\"Expected at least two filters.\");\n\n    if (length === 1) {\n        if (IS_DEV) {\n            throw new Error(\"bulk called with only one filter. Use find\");\n        }\n        return find(filterFns[0]);\n    }\n\n    const filters = filterFns as Array<FilterFn | undefined>;\n\n    let found = 0;\n    const results = Array(length);\n\n    outer:\n    for (const key in cache) {\n        const mod = cache[key];\n        if (!mod.loaded || !mod?.exports) continue;\n\n        for (let j = 0; j < length; j++) {\n            const filter = filters[j];\n            // Already done\n            if (filter === undefined) continue;\n\n            if (filter(mod.exports)) {\n                results[j] = mod.exports;\n                filters[j] = undefined;\n                if (++found === length) break outer;\n                break;\n            }\n\n            if (typeof mod.exports !== \"object\")\n                continue;\n\n            if (mod.exports.default && filter(mod.exports.default)) {\n                results[j] = mod.exports.default;\n                filters[j] = undefined;\n                if (++found === length) break outer;\n                break;\n            }\n\n            for (const nestedMod in mod.exports)\n                if (nestedMod.length <= 3) {\n                    const nested = mod.exports[nestedMod];\n                    if (nested && filter(nested)) {\n                        results[j] = nested;\n                        filters[j] = undefined;\n                        if (++found === length) break outer;\n                        continue outer;\n                    }\n                }\n        }\n    }\n\n    if (found !== length) {\n        const err = new Error(`Got ${length} filters, but only found ${found} modules!`);\n        if (IS_DEV) {\n            if (!devToolsOpen)\n                // Strict behaviour in DevBuilds to fail early and make sure the issue is found\n                throw err;\n        } else {\n            logger.warn(err);\n        }\n    }\n\n    return results;\n});\n\n/**\n * Find the id of the first module factory that includes all the given code\n * @returns string or null\n */\nexport const findModuleId = traceFunction(\"findModuleId\", function findModuleId(...code: CodeFilter) {\n    code = code.map(canonicalizeMatch);\n\n    for (const id in wreq.m) {\n        if (stringMatches(wreq.m[id].toString(), code)) return id;\n    }\n\n    const err = new Error(\"Didn't find module with code(s):\\n\" + code.join(\"\\n\"));\n    if (IS_DEV) {\n        if (!devToolsOpen)\n            // Strict behaviour in DevBuilds to fail early and make sure the issue is found\n            throw err;\n    } else {\n        logger.warn(err);\n    }\n\n    return null;\n});\n\n/**\n * Find the first module factory that includes all the given code\n * @returns The module factory or null\n */\nexport function findModuleFactory(...code: CodeFilter) {\n    const id = findModuleId(...code);\n    if (!id) return null;\n\n    return wreq.m[id];\n}\n\nexport const lazyWebpackSearchHistory = [] as Array<[\"find\" | \"findByProps\" | \"findByCode\" | \"findStore\" | \"findComponent\" | \"findComponentByCode\" | \"findExportedComponent\" | \"waitFor\" | \"waitForComponent\" | \"waitForStore\" | \"proxyLazyWebpack\" | \"LazyComponentWebpack\" | \"extractAndLoadChunks\" | \"mapMangledModule\", any[]]>;\n\n/**\n * This is just a wrapper around {@link proxyLazy} to make our reporter test for your webpack finds.\n *\n * Wraps the result of {@link makeLazy} in a Proxy you can consume as if it wasn't lazy.\n * On first property access, the lazy is evaluated\n * @param factory lazy factory\n * @param attempts how many times to try to evaluate the lazy before giving up\n * @returns Proxy\n *\n * Note that the example below exists already as an api, see {@link findByPropsLazy}\n * @example const mod = proxyLazy(() => findByProps(\"blah\")); console.log(mod.blah);\n */\nexport function proxyLazyWebpack<T = any>(factory: () => T, attempts?: number) {\n    if (IS_REPORTER) lazyWebpackSearchHistory.push([\"proxyLazyWebpack\", [factory]]);\n\n    return proxyLazy<T>(factory, attempts);\n}\n\n/**\n * This is just a wrapper around {@link LazyComponent} to make our reporter test for your webpack finds.\n *\n * A lazy component. The factory method is called on first render.\n * @param factory Function returning a Component\n * @param attempts How many times to try to get the component before giving up\n * @returns Result of factory function\n */\nexport function LazyComponentWebpack<T extends object = any>(factory: () => any, attempts?: number) {\n    if (IS_REPORTER) lazyWebpackSearchHistory.push([\"LazyComponentWebpack\", [factory]]);\n\n    return LazyComponent<T>(factory, attempts);\n}\n\n/**\n * Find the first module that matches the filter, lazily\n */\nexport function findLazy(filter: FilterFn) {\n    if (IS_REPORTER) lazyWebpackSearchHistory.push([\"find\", [filter]]);\n\n    return proxyLazy(() => find(filter));\n}\n\n/**\n * Find the first module that has the specified properties\n */\nexport function findByProps(...props: PropsFilter) {\n    const res = find(filters.byProps(...props), { isIndirect: true });\n    if (!res)\n        handleModuleNotFound(\"findByProps\", ...props);\n    return res;\n}\n\n/**\n * Find the first module that has the specified properties, lazily\n */\nexport function findByPropsLazy(...props: PropsFilter) {\n    if (IS_REPORTER) lazyWebpackSearchHistory.push([\"findByProps\", props]);\n\n    return proxyLazy(() => findByProps(...props));\n}\n\n/**\n * Find the first function that includes all the given code\n */\nexport function findByCode(...code: CodeFilter) {\n    const res = find(filters.byCode(...code), { isIndirect: true });\n    if (!res)\n        handleModuleNotFound(\"findByCode\", ...code);\n    return res;\n}\n\n/**\n * Find the first function that includes all the given code, lazily\n */\nexport function findByCodeLazy(...code: CodeFilter) {\n    if (IS_REPORTER) lazyWebpackSearchHistory.push([\"findByCode\", code]);\n\n    return proxyLazy(() => findByCode(...code));\n}\n\n/**\n * Find a store by its displayName\n */\nexport function findStore(name: StoreNameFilter) {\n    const res = find(filters.byStoreName(name), { isIndirect: true });\n    if (!res)\n        handleModuleNotFound(\"findStore\", name);\n    return res;\n}\n\n/**\n * Find a store by its displayName, lazily\n */\nexport function findStoreLazy(name: StoreNameFilter) {\n    if (IS_REPORTER) lazyWebpackSearchHistory.push([\"findStore\", [name]]);\n\n    return proxyLazy(() => findStore(name));\n}\n\n/**\n * Finds the component which includes all the given code. Checks for plain components, memos and forwardRefs\n */\nexport function findComponentByCode(...code: CodeFilter) {\n    const res = find(filters.componentByCode(...code), { isIndirect: true });\n    if (!res)\n        handleModuleNotFound(\"findComponentByCode\", ...code);\n    return res;\n}\n\n/**\n * Finds the first component that matches the filter, lazily.\n */\nexport function findComponentLazy<T extends object = any>(filter: FilterFn) {\n    if (IS_REPORTER) lazyWebpackSearchHistory.push([\"findComponent\", [filter]]);\n\n\n    return LazyComponent<T>(() => {\n        const res = find(filter, { isIndirect: true });\n        if (!res)\n            handleModuleNotFound(\"findComponent\", filter);\n        return res;\n    });\n}\n\n/**\n * Finds the first component that includes all the given code, lazily\n */\nexport function findComponentByCodeLazy<T extends object = any>(...code: CodeFilter) {\n    if (IS_REPORTER) lazyWebpackSearchHistory.push([\"findComponentByCode\", code]);\n\n    return LazyComponent<T>(() => {\n        const res = find(filters.componentByCode(...code), { isIndirect: true });\n        if (!res)\n            handleModuleNotFound(\"findComponentByCode\", ...code);\n        return res;\n    });\n}\n\n/**\n * Finds the first component that is exported by the first prop name, lazily\n */\nexport function findExportedComponentLazy<T extends object = any>(...props: PropsFilter) {\n    if (IS_REPORTER) lazyWebpackSearchHistory.push([\"findExportedComponent\", props]);\n\n    return LazyComponent<T>(() => {\n        const res = find(filters.byProps(...props), { isIndirect: true });\n        if (!res)\n            handleModuleNotFound(\"findExportedComponent\", ...props);\n        return res[props[0]];\n    });\n}\n\n/**\n * Finds a mangled module by the provided code \"code\" (must be unique and can be anywhere in the module)\n * then maps it into an easily usable module via the specified mappers.\n *\n * @param code The code to look for\n * @param mappers Mappers to create the non mangled exports\n * @returns Unmangled exports as specified in mappers\n *\n * @example mapMangledModule(\"headerIdIsManaged:\", {\n *             openModal: filters.byCode(\"headerIdIsManaged:\"),\n *             closeModal: filters.byCode(\"key==\")\n *          })\n */\nexport const mapMangledModule = traceFunction(\"mapMangledModule\", function mapMangledModule<S extends string>(code: string | RegExp | CodeFilter, mappers: Record<S, FilterFn>): Record<S, any> {\n    const exports = {} as Record<S, any>;\n\n    const id = findModuleId(...Array.isArray(code) ? code : [code]);\n    if (id === null)\n        return exports;\n\n    const mod = wreq(id as any);\n    outer:\n    for (const key in mod) {\n        const member = mod[key];\n        for (const newName in mappers) {\n            // if the current mapper matches this module\n            if (mappers[newName](member)) {\n                exports[newName] = member;\n                continue outer;\n            }\n        }\n    }\n    return exports;\n});\n\n/**\n * {@link mapMangledModule}, lazy.\n\n * Finds a mangled module by the provided code \"code\" (must be unique and can be anywhere in the module)\n * then maps it into an easily usable module via the specified mappers.\n *\n * @param code The code to look for\n * @param mappers Mappers to create the non mangled exports\n * @returns Unmangled exports as specified in mappers\n *\n * @example mapMangledModule(\"headerIdIsManaged:\", {\n *             openModal: filters.byCode(\"headerIdIsManaged:\"),\n *             closeModal: filters.byCode(\"key==\")\n *          })\n */\nexport function mapMangledModuleLazy<S extends string>(code: string | RegExp | CodeFilter, mappers: Record<S, FilterFn>): Record<S, any> {\n    if (IS_REPORTER) lazyWebpackSearchHistory.push([\"mapMangledModule\", [code, mappers]]);\n\n    return proxyLazy(() => mapMangledModule(code, mappers));\n}\n\nexport const DefaultExtractAndLoadChunksRegex = /(?:(?:Promise\\.all\\(\\[)?(\\i\\.e\\(\"?[^)]+?\"?\\)[^\\]]*?)(?:\\]\\))?|Promise\\.resolve\\(\\))\\.then\\(\\i\\.bind\\(\\i,\"?([^)]+?)\"?\\)\\)/;\nexport const ChunkIdsRegex = /\\(\"([^\"]+?)\"\\)/g;\n\n/**\n * Extract and load chunks using their entry point\n * @param code An array of all the code the module factory containing the lazy chunk loading must include\n * @param matcher A RegExp that returns the chunk ids array as the first capture group and the entry point id as the second. Defaults to a matcher that captures the first lazy chunk loading found in the module factory\n * @returns A promise that resolves with a boolean whether the chunks were loaded\n */\nexport async function extractAndLoadChunks(code: CodeFilter, matcher: RegExp = DefaultExtractAndLoadChunksRegex) {\n    const module = findModuleFactory(...code);\n    if (!module) {\n        const err = new Error(\"extractAndLoadChunks: Couldn't find module factory\");\n        logger.warn(err, \"Code:\", code, \"Matcher:\", matcher);\n\n        // Strict behaviour in DevBuilds to fail early and make sure the issue is found\n        if (IS_DEV && !devToolsOpen)\n            throw err;\n\n        return false;\n    }\n\n    const match = module.toString().match(canonicalizeMatch(matcher));\n    if (!match) {\n        const err = new Error(\"extractAndLoadChunks: Couldn't find chunk loading in module factory code\");\n        logger.warn(err, \"Code:\", code, \"Matcher:\", matcher);\n\n        // Strict behaviour in DevBuilds to fail early and make sure the issue is found\n        if (IS_DEV && !devToolsOpen)\n            throw err;\n\n        return false;\n    }\n\n    const [, rawChunkIds, entryPointId] = match;\n    if (Number.isNaN(Number(entryPointId))) {\n        const err = new Error(\"extractAndLoadChunks: Matcher didn't return a capturing group with the chunk ids array, or the entry point id returned as the second group wasn't a number\");\n        logger.warn(err, \"Code:\", code, \"Matcher:\", matcher);\n\n        // Strict behaviour in DevBuilds to fail early and make sure the issue is found\n        if (IS_DEV && !devToolsOpen)\n            throw err;\n\n        return false;\n    }\n\n    if (rawChunkIds) {\n        const chunkIds = Array.from(rawChunkIds.matchAll(ChunkIdsRegex)).map((m: any) => Number(m[1]));\n        await Promise.all(chunkIds.map(id => wreq.e(id)));\n    }\n\n    if (wreq.m[entryPointId] == null) {\n        const err = new Error(\"extractAndLoadChunks: Entry point is not loaded in the module factories, perhaps one of the chunks failed to load\");\n        logger.warn(err, \"Code:\", code, \"Matcher:\", matcher);\n\n        // Strict behaviour in DevBuilds to fail early and make sure the issue is found\n        if (IS_DEV && !devToolsOpen)\n            throw err;\n\n        return false;\n    }\n\n    wreq(Number(entryPointId));\n    return true;\n}\n\n/**\n * This is just a wrapper around {@link extractAndLoadChunks} to make our reporter test for your webpack finds.\n *\n * Extract and load chunks using their entry point\n * @param code An array of all the code the module factory containing the lazy chunk loading must include\n * @param matcher A RegExp that returns the chunk ids array as the first capture group and the entry point id as the second. Defaults to a matcher that captures the first lazy chunk loading found in the module factory\n * @returns A function that returns a promise that resolves with a boolean whether the chunks were loaded, on first call\n */\nexport function extractAndLoadChunksLazy(code: CodeFilter, matcher = DefaultExtractAndLoadChunksRegex) {\n    if (IS_REPORTER) lazyWebpackSearchHistory.push([\"extractAndLoadChunks\", [code, matcher]]);\n\n    return makeLazy(() => extractAndLoadChunks(code, matcher));\n}\n\n/**\n * Wait for a module that matches the provided filter to be registered,\n * then call the callback with the module as the first argument\n */\nexport function waitFor(filter: string | PropsFilter | FilterFn, callback: CallbackFn, { isIndirect = false }: { isIndirect?: boolean; } = {}) {\n    if (IS_REPORTER && !isIndirect) lazyWebpackSearchHistory.push([\"waitFor\", Array.isArray(filter) ? filter : [filter]]);\n\n    if (typeof filter === \"string\")\n        filter = filters.byProps(filter);\n    else if (Array.isArray(filter))\n        filter = filters.byProps(...filter);\n    else if (typeof filter !== \"function\")\n        throw new Error(\"filter must be a string, string[] or function, got \" + typeof filter);\n\n    if (cache != null) {\n        const [existing, id] = find(filter, { isIndirect: true, isWaitFor: true });\n        if (existing) return void callback(existing, id);\n    }\n\n    subscriptions.set(filter, callback);\n}\n\n/**\n * Search modules by keyword. This searches the factory methods,\n * meaning you can search all sorts of things, displayName, methodName, strings somewhere in the code, etc\n * @param code One or more strings or regexes\n * @returns Mapping of found modules\n */\nexport function search(...code: CodeFilter) {\n    code = code.map(canonicalizeMatch);\n\n    const results = {} as Record<number, Function>;\n    const factories = wreq.m;\n\n    for (const id in factories) {\n        const factory = factories[id].original ?? factories[id];\n\n        if (stringMatches(factory.toString(), code))\n            results[id] = factory;\n    }\n\n    return results;\n}\n\n/**\n * Extract a specific module by id into its own Source File. This has no effect on\n * the code, it is only useful to be able to look at a specific module without having\n * to view a massive file. extract then returns the extracted module so you can jump to it.\n * As mentioned above, note that this extracted module is not actually used,\n * so putting breakpoints or similar will have no effect.\n * @param id The id of the module to extract\n */\nexport function extract(id: string | number) {\n    const mod = wreq.m[id] as Function;\n    if (!mod) return null;\n\n    const code = `\n// [EXTRACTED] WebpackModule${id}\n// WARNING: This module was extracted to be more easily readable.\n//          This module is NOT ACTUALLY USED! This means putting breakpoints will have NO EFFECT!!\n\n0,${mod.toString()}\n//# sourceURL=ExtractedWebpackModule${id}\n`;\n    const extracted = (0, eval)(code);\n    return extracted as Function;\n}\n", "/*\n * Vencord, a modification for Discord's desktop app\n * Copyright (c) 2023 Vendicated and contributors\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { findByPropsLazy, findLazy } from \"@webpack\";\n\nimport * as t from \"./types/classes\";\n\nexport const ModalImageClasses: t.ImageModalClasses = findLazy(m => m.image && m.modal && !m.applicationIcon);\nexport const ButtonWrapperClasses: t.ButtonWrapperClasses = findByPropsLazy(\"buttonWrapper\", \"buttonContent\");\n", "/*\n * Vencord, a modification for Discord's desktop app\n * Copyright (c) 2022 Vendicated and contributors\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Clipboard, Toasts } from \"@webpack/common\";\n\nimport { DevsById } from \"./constants\";\n\n/**\n * Calls .join(\" \") on the arguments\n * classes(\"one\", \"two\") => \"one two\"\n */\nexport function classes(...classes: Array<string | null | undefined | false>) {\n    return classes.filter(Boolean).join(\" \");\n}\n\n/**\n * Returns a promise that resolves after the specified amount of time\n */\nexport function sleep(ms: number): Promise<void> {\n    return new Promise(r => setTimeout(r, ms));\n}\n\nexport function copyWithToast(text: string, toastMessage = \"Copied to clipboard!\") {\n    if (Clipboard.SUPPORTS_COPY) {\n        Clipboard.copy(text);\n    } else {\n        toastMessage = \"Your browser does not support copying to clipboard\";\n    }\n    Toasts.show({\n        message: toastMessage,\n        id: Toasts.genId(),\n        type: Toasts.Type.SUCCESS\n    });\n}\n\n/**\n * Check if obj is a true object: of type \"object\" and not null or array\n */\nexport function isObject(obj: unknown): obj is object {\n    return typeof obj === \"object\" && obj !== null && !Array.isArray(obj);\n}\n\n/**\n * Check if an object is empty or in other words has no own properties\n */\nexport function isObjectEmpty(obj: object) {\n    for (const k in obj)\n        if (Object.hasOwn(obj, k)) return false;\n\n    return true;\n}\n\n/**\n * Returns null if value is not a URL, otherwise return URL object.\n * Avoids having to wrap url checks in a try/catch\n */\nexport function parseUrl(urlString: string): URL | null {\n    try {\n        return new URL(urlString);\n    } catch {\n        return null;\n    }\n}\n\n/**\n * Checks whether an element is on screen\n */\nexport const checkIntersecting = (el: Element) => {\n    const elementBox = el.getBoundingClientRect();\n    const documentHeight = Math.max(document.documentElement.clientHeight, window.innerHeight);\n    return !(elementBox.bottom < 0 || elementBox.top - documentHeight >= 0);\n};\n\nexport function identity<T>(value: T): T {\n    return value;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent#mobile_tablet_or_desktop\n// \"In summary, we recommend looking for the string Mobi anywhere in the User Agent to detect a mobile device.\"\nexport const isMobile = navigator.userAgent.includes(\"Mobi\");\n\nexport const isPluginDev = (id: string) => Object.hasOwn(DevsById, id);\n\nexport function pluralise(amount: number, singular: string, plural = singular + \"s\") {\n    return amount === 1 ? `${amount} ${singular}` : `${amount} ${plural}`;\n}\n\nexport function tryOrElse<T>(func: () => T, fallback: T): T {\n    try {\n        const res = func();\n        return res instanceof Promise\n            ? res.catch(() => fallback) as T\n            : res;\n    } catch {\n        return fallback;\n    }\n}\n", "/*\n * Vencord, a modification for Discord's desktop app\n * Copyright (c) 2023 Vendicated and contributors\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { LazyComponent } from \"@utils/react\";\n\n// eslint-disable-next-line path-alias/no-relative\nimport { FilterFn, filters, lazyWebpackSearchHistory, waitFor } from \"../webpack\";\n\nexport function waitForComponent<T extends React.ComponentType<any> = React.ComponentType<any> & Record<string, any>>(name: string, filter: FilterFn | string | string[]): T {\n    if (IS_REPORTER) lazyWebpackSearchHistory.push([\"waitForComponent\", Array.isArray(filter) ? filter : [filter]]);\n\n    let myValue: T = function () {\n        throw new Error(`Vencord could not find the ${name} Component`);\n    } as any;\n\n    const lazyComponent = LazyComponent(() => myValue) as T;\n    waitFor(filter, (v: any) => {\n        myValue = v;\n        Object.assign(lazyComponent, v);\n    }, { isIndirect: true });\n\n    return lazyComponent;\n}\n\nexport function waitForStore(name: string, cb: (v: any) => void) {\n    if (IS_REPORTER) lazyWebpackSearchHistory.push([\"waitForStore\", [name]]);\n\n    waitFor(filters.byStoreName(name), cb, { isIndirect: true });\n}\n", "/*\n * Vencord, a modification for Discord's desktop app\n * Copyright (c) 2023 Vendicated and contributors\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { filters, findByPropsLazy, waitFor } from \"@webpack\";\n\nimport { waitForComponent } from \"./internal\";\nimport * as t from \"./types/components\";\n\nexport let Forms = {} as {\n    FormTitle: t.FormTitle,\n    FormSection: t.FormSection,\n    FormDivider: t.FormDivider,\n    FormText: t.FormText,\n};\n\nexport let Icons = {} as t.Icons;\n\nexport let Card: t.Card;\nexport let Button: t.Button;\nexport let Switch: t.Switch;\nexport let Tooltip: t.Tooltip;\nexport let TooltipContainer: t.TooltipContainer;\nexport let TextInput: t.TextInput;\nexport let TextArea: t.TextArea;\nexport let Text: t.Text;\nexport let Heading: t.Heading;\nexport let Select: t.Select;\nexport let SearchableSelect: t.SearchableSelect;\nexport let Slider: t.Slider;\nexport let ButtonLooks: t.ButtonLooks;\nexport let Popout: t.Popout;\nexport let Dialog: t.Dialog;\nexport let TabBar: any;\nexport let Paginator: t.Paginator;\nexport let ScrollerThin: t.ScrollerThin;\nexport let Clickable: t.Clickable;\nexport let Avatar: t.Avatar;\nexport let FocusLock: t.FocusLock;\n// token lagger real\n/** css colour resolver stuff, no clue what exactly this does, just copied usage from Discord */\nexport let useToken: t.useToken;\n\nexport const MaskedLink = waitForComponent<t.MaskedLink>(\"MaskedLink\", filters.componentByCode(\"MASKED_LINK)\"));\nexport const Timestamp = waitForComponent<t.Timestamp>(\"Timestamp\", filters.byCode(\".Messages.MESSAGE_EDITED_TIMESTAMP_A11Y_LABEL.format\"));\nexport const Flex = waitForComponent<t.Flex>(\"Flex\", [\"Justify\", \"Align\", \"Wrap\"]);\n\nexport const { OAuth2AuthorizeModal } = findByPropsLazy(\"OAuth2AuthorizeModal\");\n\nwaitFor([\"FormItem\", \"Button\"], m => {\n    ({\n        useToken,\n        Card,\n        Button,\n        FormSwitch: Switch,\n        Tooltip,\n        TooltipContainer,\n        TextInput,\n        TextArea,\n        Text,\n        Select,\n        SearchableSelect,\n        Slider,\n        ButtonLooks,\n        TabBar,\n        Popout,\n        Dialog,\n        Paginator,\n        ScrollerThin,\n        Clickable,\n        Avatar,\n        FocusLock,\n        Heading\n    } = m);\n    Forms = m;\n    Icons = m;\n});\n", "/*\n * Vencord, a modification for Discord's desktop app\n * Copyright (c) 2023 Vendicated and contributors\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// eslint-disable-next-line path-alias/no-relative\nimport { filters, mapMangledModuleLazy, waitFor } from \"../webpack\";\nimport type * as t from \"./types/menu\";\n\nexport let Menu = {} as t.Menu;\n\nwaitFor([\"MenuItem\", \"MenuSliderControl\"], m => Menu = m);\n\nexport const ContextMenuApi: t.ContextMenuApi = mapMangledModuleLazy('type:\"CONTEXT_MENU_OPEN', {\n    closeContextMenu: filters.byCode(\"CONTEXT_MENU_CLOSE\"),\n    openContextMenu: filters.byCode(\"renderLazy:\"),\n    openContextMenuLazy: e => typeof e === \"function\" && e.toString().length < 100\n});\n\n", "/*\n * Vencord, a modification for Discord's desktop app\n * Copyright (c) 2023 Vendicated and contributors\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// eslint-disable-next-line path-alias/no-relative\nimport { findByPropsLazy, waitFor } from \"../webpack\";\n\nexport let React: typeof import(\"react\");\nexport let useState: typeof React.useState;\nexport let useEffect: typeof React.useEffect;\nexport let useMemo: typeof React.useMemo;\nexport let useRef: typeof React.useRef;\nexport let useReducer: typeof React.useReducer;\nexport let useCallback: typeof React.useCallback;\n\nexport const ReactDOM: typeof import(\"react-dom\") & typeof import(\"react-dom/client\") = findByPropsLazy(\"createPortal\", \"render\");\n\nwaitFor(\"useState\", m => {\n    React = m;\n    ({ useEffect, useState, useMemo, useRef, useReducer, useCallback } = React);\n});\n", "/*\n * Vencord, a modification for Discord's desktop app\n * Copyright (c) 2023 Vendicated and contributors\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport type * as Stores from \"discord-types/stores\";\n\n// eslint-disable-next-line path-alias/no-relative\nimport { findByCodeLazy, findByPropsLazy } from \"../webpack\";\nimport { waitForStore } from \"./internal\";\nimport * as t from \"./types/stores\";\n\nexport const Flux: t.Flux = findByPropsLazy(\"connectStores\");\n\nexport type GenericStore = t.FluxStore & Record<string, any>;\n\nexport const DraftType = findByPropsLazy(\"ChannelMessage\", \"SlashCommand\");\n\nexport let MessageStore: Omit<Stores.MessageStore, \"getMessages\"> & {\n    getMessages(chanId: string): any;\n};\n\n// this is not actually a FluxStore\nexport const PrivateChannelsStore = findByPropsLazy(\"openPrivateChannel\");\nexport let PermissionStore: GenericStore;\nexport let GuildChannelStore: GenericStore;\nexport let ReadStateStore: GenericStore;\nexport let PresenceStore: GenericStore;\n\nexport let GuildStore: t.GuildStore;\nexport let UserStore: Stores.UserStore & t.FluxStore;\nexport let UserProfileStore: GenericStore;\nexport let SelectedChannelStore: Stores.SelectedChannelStore & t.FluxStore;\nexport let SelectedGuildStore: t.FluxStore & Record<string, any>;\nexport let ChannelStore: Stores.ChannelStore & t.FluxStore;\nexport let GuildMemberStore: Stores.GuildMemberStore & t.FluxStore;\nexport let RelationshipStore: Stores.RelationshipStore & t.FluxStore & {\n    /** Get the date (as a string) that the relationship was created */\n    getSince(userId: string): string;\n};\n\nexport let EmojiStore: t.EmojiStore;\nexport let ThemeStore: t.ThemeStore;\nexport let WindowStore: t.WindowStore;\nexport let DraftStore: t.DraftStore;\n\n/**\n * React hook that returns stateful data for one or more stores\n * You might need a custom comparator (4th argument) if your store data is an object\n * @param stores The stores to listen to\n * @param mapper A function that returns the data you need\n * @param dependencies An array of reactive values which the hook depends on. Use this if your mapper or equality function depends on the value of another hook\n * @param isEqual A custom comparator for the data returned by mapper\n *\n * @example const user = useStateFromStores([UserStore], () => UserStore.getCurrentUser(), null, (old, current) => old.id === current.id);\n */\nexport const useStateFromStores: t.useStateFromStores = findByCodeLazy(\"useStateFromStores\");\n\nwaitForStore(\"DraftStore\", s => DraftStore = s);\nwaitForStore(\"UserStore\", s => UserStore = s);\nwaitForStore(\"UserProfileStore\", m => UserProfileStore = m);\nwaitForStore(\"ChannelStore\", m => ChannelStore = m);\nwaitForStore(\"SelectedChannelStore\", m => SelectedChannelStore = m);\nwaitForStore(\"SelectedGuildStore\", m => SelectedGuildStore = m);\nwaitForStore(\"GuildStore\", m => GuildStore = m);\nwaitForStore(\"GuildMemberStore\", m => GuildMemberStore = m);\nwaitForStore(\"RelationshipStore\", m => RelationshipStore = m);\nwaitForStore(\"PermissionStore\", m => PermissionStore = m);\nwaitForStore(\"PresenceStore\", m => PresenceStore = m);\nwaitForStore(\"ReadStateStore\", m => ReadStateStore = m);\nwaitForStore(\"GuildChannelStore\", m => GuildChannelStore = m);\nwaitForStore(\"MessageStore\", m => MessageStore = m);\nwaitForStore(\"WindowStore\", m => WindowStore = m);\nwaitForStore(\"EmojiStore\", m => EmojiStore = m);\nwaitForStore(\"ThemeStore\", m => ThemeStore = m);\n", "/*\n * Vencord, a Discord client mod\n * Copyright (c) 2023 Vendicated and contributors\n * SPDX-License-Identifier: GPL-3.0-or-later\n */\n\nimport { findLazy } from \"@webpack\";\n\nexport const UserSettingsActionCreators = {\n    FrecencyUserSettingsActionCreators: findLazy(m => m.ProtoClass?.typeName?.endsWith(\".FrecencyUserSettings\")),\n    PreloadedUserSettingsActionCreators: findLazy(m => m.ProtoClass?.typeName?.endsWith(\".PreloadedUserSettings\")),\n};\n", "/*\n * Vencord, a modification for Discord's desktop app\n * Copyright (c) 2023 Vendicated and contributors\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport type { Channel } from \"discord-types/general\";\n\n// eslint-disable-next-line path-alias/no-relative\nimport { _resolveReady, filters, findByCodeLazy, findByPropsLazy, findLazy, mapMangledModuleLazy, waitFor } from \"../webpack\";\nimport type * as t from \"./types/utils\";\n\nexport let FluxDispatcher: t.FluxDispatcher;\nwaitFor([\"dispatch\", \"subscribe\"], m => {\n    FluxDispatcher = m;\n    // Non import call to avoid circular dependency\n    Vencord.Plugins.subscribeAllPluginsFluxEvents(m);\n\n    const cb = () => {\n        m.unsubscribe(\"CONNECTION_OPEN\", cb);\n        _resolveReady();\n    };\n    m.subscribe(\"CONNECTION_OPEN\", cb);\n});\n\nexport let ComponentDispatch;\nwaitFor([\"dispatchToLastSubscribed\"], m => ComponentDispatch = m);\n\nexport const Constants: t.Constants = mapMangledModuleLazy('ME:\"/users/@me\"', {\n    Endpoints: filters.byProps(\"USER\", \"ME\"),\n    UserFlags: filters.byProps(\"STAFF\", \"SPAMMER\"),\n    FriendsSections: m => m.PENDING === \"PENDING\" && m.ADD_FRIEND\n});\n\nexport const RestAPI: t.RestAPI = findLazy(m => typeof m === \"object\" && m.del && m.put);\nexport const moment: typeof import(\"moment\") = findByPropsLazy(\"parseTwoDigitYear\");\n\nexport const hljs: typeof import(\"highlight.js\") = findByPropsLazy(\"highlight\", \"registerLanguage\");\n\nexport const { match, P }: Pick<typeof import(\"ts-pattern\"), \"match\" | \"P\"> = mapMangledModuleLazy(\"@ts-pattern/matcher\", {\n    match: filters.byCode(\"return new\"),\n    P: filters.byProps(\"when\")\n});\n\nexport const lodash: typeof import(\"lodash\") = findByPropsLazy(\"debounce\", \"cloneDeep\");\n\nexport const i18n: t.i18n = findLazy(m => m.Messages?.[\"en-US\"]);\n\nexport let SnowflakeUtils: t.SnowflakeUtils;\nwaitFor([\"fromTimestamp\", \"extractTimestamp\"], m => SnowflakeUtils = m);\n\nexport let Parser: t.Parser;\nwaitFor(\"parseTopic\", m => Parser = m);\nexport let Alerts: t.Alerts;\nwaitFor([\"show\", \"close\"], m => Alerts = m);\n\nconst ToastType = {\n    MESSAGE: 0,\n    SUCCESS: 1,\n    FAILURE: 2,\n    CUSTOM: 3\n};\nconst ToastPosition = {\n    TOP: 0,\n    BOTTOM: 1\n};\n\nexport interface ToastData {\n    message: string,\n    id: string,\n    /**\n     * Toasts.Type\n     */\n    type: number,\n    options?: ToastOptions;\n}\n\nexport interface ToastOptions {\n    /**\n     * Toasts.Position\n     */\n    position?: number;\n    component?: React.ReactNode,\n    duration?: number;\n}\n\nexport const Toasts = {\n    Type: ToastType,\n    Position: ToastPosition,\n    // what's less likely than getting 0 from Math.random()? Getting it twice in a row\n    genId: () => (Math.random() || Math.random()).toString(36).slice(2),\n\n    // hack to merge with the following interface, dunno if there's a better way\n    ...{} as {\n        show(data: ToastData): void;\n        pop(): void;\n        create(message: string, type: number, options?: ToastOptions): ToastData;\n    }\n};\n\n// This is the same module but this is easier\nwaitFor(\"showToast\", m => {\n    Toasts.show = m.showToast;\n    Toasts.pop = m.popToast;\n    Toasts.create = m.createToast;\n});\n\n\n/**\n * Show a simple toast. If you need more options, use Toasts.show manually\n */\nexport function showToast(message: string, type = ToastType.MESSAGE, options?: ToastOptions) {\n    Toasts.show(Toasts.create(message, type, options));\n}\n\nexport const UserUtils = {\n    getUser: findByCodeLazy(\".USER(\")\n};\n\nexport const UploadManager = findByPropsLazy(\"clearAll\", \"addFile\");\nexport const UploadHandler = {\n    promptToUpload: findByCodeLazy(\".ATTACHMENT_TOO_MANY_ERROR_TITLE,\") as (files: File[], channel: Channel, draftType: Number) => void\n};\n\nexport const ApplicationAssetUtils = findByPropsLazy(\"fetchAssetIds\", \"getAssetImage\") as {\n    fetchAssetIds: (applicationId: string, e: string[]) => Promise<string[]>;\n};\n\nexport const Clipboard: t.Clipboard = mapMangledModuleLazy('queryCommandEnabled(\"copy\")', {\n    copy: filters.byCode(\".copy(\"),\n    SUPPORTS_COPY: e => typeof e === \"boolean\"\n});\n\nexport const NavigationRouter: t.NavigationRouter = mapMangledModuleLazy(\"Transitioning to \", {\n    transitionTo: filters.byCode(\"transitionTo -\"),\n    transitionToGuild: filters.byCode(\"transitionToGuild -\"),\n    back: filters.byCode(\"goBack()\"),\n    forward: filters.byCode(\"goForward()\"),\n});\nexport const ChannelRouter: t.ChannelRouter = mapMangledModuleLazy('\"Thread must have a parent ID.\"', {\n    transitionToChannel: filters.byCode(\".preload\"),\n    transitionToThread: filters.byCode('\"Thread must have a parent ID.\"')\n});\n\nexport let SettingsRouter: any;\nwaitFor([\"open\", \"saveAccountChanges\"], m => SettingsRouter = m);\n\nexport const PermissionsBits: t.PermissionsBits = findLazy(m => typeof m.ADMINISTRATOR === \"bigint\");\n\nexport const zustandCreate = findByCodeLazy(\"will be removed in v4\");\n\nexport const zustandPersist = findByCodeLazy(\"[zustand persist middleware]\");\n\nexport const MessageActions = findByPropsLazy(\"editMessage\", \"sendMessage\");\nexport const MessageCache = findByPropsLazy(\"clearCache\", \"_channelMessages\");\nexport const UserProfileActions = findByPropsLazy(\"openUserProfileModal\", \"closeUserProfileModal\");\nexport const InviteActions = findByPropsLazy(\"resolveInvite\");\n\nexport const IconUtils: t.IconUtils = findByPropsLazy(\"getGuildBannerURL\", \"getUserAvatarURL\");\n\nexport const ExpressionPickerStore: t.ExpressionPickerStore = mapMangledModuleLazy(\"expression-picker-last-active-view\", {\n    openExpressionPicker: filters.byCode(/setState\\({activeView:(?:(?!null)\\i),activeViewType:/),\n    closeExpressionPicker: filters.byCode(\"setState({activeView:null\"),\n    toggleMultiExpressionPicker: filters.byCode(\".EMOJI,\"),\n    toggleExpressionPicker: filters.byCode(/getState\\(\\)\\.activeView===\\i\\?\\i\\(\\):\\i\\(/),\n    setExpressionPickerView: filters.byCode(/setState\\({activeView:\\i,lastActiveView:/),\n    setSearchQuery: filters.byCode(\"searchQuery:\"),\n    useExpressionPickerStore: filters.byCode(\"Object.is\")\n});\n\nexport const PopoutActions: t.PopoutActions = mapMangledModuleLazy('type:\"POPOUT_WINDOW_OPEN\"', {\n    open: filters.byCode('type:\"POPOUT_WINDOW_OPEN\"'),\n    close: filters.byCode('type:\"POPOUT_WINDOW_CLOSE\"'),\n    setAlwaysOnTop: filters.byCode('type:\"POPOUT_WINDOW_SET_ALWAYS_ON_TOP\"'),\n});\n\nexport const UsernameUtils: t.UsernameUtils = findByPropsLazy(\"useName\", \"getGlobalName\");\nexport const DisplayProfileUtils: t.DisplayProfileUtils = mapMangledModuleLazy(/=\\i\\.getUserProfile\\(\\i\\),\\i=\\i\\.getGuildMemberProfile\\(/, {\n    getDisplayProfile: filters.byCode(\".getGuildMemberProfile(\"),\n    useDisplayProfile: filters.byCode(/\\[\\i\\.\\i,\\i\\.\\i],\\(\\)=>/)\n});\n", "/*\n * Vencord, a modification for Discord's desktop app\n * Copyright (c) 2023 Vendicated and contributors\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Logger } from \"@utils/Logger\";\nimport { Menu, React } from \"@webpack/common\";\nimport type { ReactElement } from \"react\";\n\n/**\n * @param children The rendered context menu elements\n * @param args Any arguments passed into making the context menu, like the guild, channel, user or message for example\n */\nexport type NavContextMenuPatchCallback = (children: Array<ReactElement | null>, ...args: Array<any>) => void;\n/**\n * @param navId The navId of the context menu being patched\n * @param children The rendered context menu elements\n * @param args Any arguments passed into making the context menu, like the guild, channel, user or message for example\n */\nexport type GlobalContextMenuPatchCallback = (navId: string, children: Array<ReactElement | null>, ...args: Array<any>) => void;\n\nconst ContextMenuLogger = new Logger(\"ContextMenu\");\n\nexport const navPatches = new Map<string, Set<NavContextMenuPatchCallback>>();\nexport const globalPatches = new Set<GlobalContextMenuPatchCallback>();\n\n/**\n * Add a context menu patch\n * @param navId The navId(s) for the context menu(s) to patch\n * @param patch The patch to be applied\n */\nexport function addContextMenuPatch(navId: string | Array<string>, patch: NavContextMenuPatchCallback) {\n    if (!Array.isArray(navId)) navId = [navId];\n    for (const id of navId) {\n        let contextMenuPatches = navPatches.get(id);\n        if (!contextMenuPatches) {\n            contextMenuPatches = new Set();\n            navPatches.set(id, contextMenuPatches);\n        }\n\n        contextMenuPatches.add(patch);\n    }\n}\n\n/**\n * Add a global context menu patch that fires the patch for all context menus\n * @param patch The patch to be applied\n */\nexport function addGlobalContextMenuPatch(patch: GlobalContextMenuPatchCallback) {\n    globalPatches.add(patch);\n}\n\n/**\n * Remove a context menu patch\n * @param navId The navId(s) for the context menu(s) to remove the patch\n * @param patch The patch to be removed\n * @returns Whether the patch was successfully removed from the context menu(s)\n */\nexport function removeContextMenuPatch<T extends string | Array<string>>(navId: T, patch: NavContextMenuPatchCallback): T extends string ? boolean : Array<boolean> {\n    const navIds = Array.isArray(navId) ? navId : [navId as string];\n\n    const results = navIds.map(id => navPatches.get(id)?.delete(patch) ?? false);\n\n    return (Array.isArray(navId) ? results : results[0]) as T extends string ? boolean : Array<boolean>;\n}\n\n/**\n * Remove a global context menu patch\n * @param patch The patch to be removed\n * @returns Whether the patch was successfully removed\n */\nexport function removeGlobalContextMenuPatch(patch: GlobalContextMenuPatchCallback): boolean {\n    return globalPatches.delete(patch);\n}\n\n/**\n * A helper function for finding the children array of a group nested inside a context menu based on the id(s) of its children\n * @param id The id of the child. If an array is specified, all ids will be tried\n * @param children The context menu children\n * @param matchSubstring Whether to check if the id is a substring of the child id\n */\nexport function findGroupChildrenByChildId(id: string | string[], children: Array<ReactElement | null | undefined>, matchSubstring = false): Array<ReactElement | null | undefined> | null {\n    for (const child of children) {\n        if (child == null) continue;\n\n        if (Array.isArray(child)) {\n            const found = findGroupChildrenByChildId(id, child, matchSubstring);\n            if (found !== null) return found;\n        }\n\n        if (\n            (Array.isArray(id) && id.some(id => matchSubstring ? child.props?.id?.includes(id) : child.props?.id === id))\n            || (matchSubstring ? child.props?.id?.includes(id) : child.props?.id === id)\n        ) return children;\n\n        let nextChildren = child.props?.children;\n        if (nextChildren) {\n            if (!Array.isArray(nextChildren)) {\n                nextChildren = [nextChildren];\n                child.props.children = nextChildren;\n            }\n\n            const found = findGroupChildrenByChildId(id, nextChildren, matchSubstring);\n            if (found !== null) return found;\n        }\n    }\n\n    return null;\n}\n\ninterface ContextMenuProps {\n    contextMenuApiArguments?: Array<any>;\n    navId: string;\n    children: Array<ReactElement | null>;\n    \"aria-label\": string;\n    onSelect: (() => void) | undefined;\n    onClose: (callback: (...args: Array<any>) => any) => void;\n}\n\nexport function _usePatchContextMenu(props: ContextMenuProps) {\n    props = {\n        ...props,\n        children: cloneMenuChildren(props.children),\n    };\n\n    props.contextMenuApiArguments ??= [];\n    const contextMenuPatches = navPatches.get(props.navId);\n\n    if (!Array.isArray(props.children)) props.children = [props.children];\n\n    if (contextMenuPatches) {\n        for (const patch of contextMenuPatches) {\n            try {\n                patch(props.children, ...props.contextMenuApiArguments);\n            } catch (err) {\n                ContextMenuLogger.error(`Patch for ${props.navId} errored,`, err);\n            }\n        }\n    }\n\n    for (const patch of globalPatches) {\n        try {\n            patch(props.navId, props.children, ...props.contextMenuApiArguments);\n        } catch (err) {\n            ContextMenuLogger.error(\"Global patch errored,\", err);\n        }\n    }\n\n    return props;\n}\n\nfunction cloneMenuChildren(obj: ReactElement | Array<ReactElement | null> | null) {\n    if (Array.isArray(obj)) {\n        return obj.map(cloneMenuChildren);\n    }\n\n    if (React.isValidElement(obj)) {\n        obj = React.cloneElement(obj);\n\n        if (\n            obj?.props?.children &&\n            (obj.type !== Menu.MenuControlItem || obj.type === Menu.MenuControlItem && obj.props.control != null)\n        ) {\n            obj.props.children = cloneMenuChildren(obj.props.children);\n        }\n    }\n\n    return obj;\n}\n"],
  "mappings": "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",
  "names": ["cache", "LazyComponent", "match", "logger", "beginTrace", "finishTrace", "traceFunction", "find", "findBulk", "filters", "findModuleId", "mapMangledModule"]
}
